# Reload Path to ensure scoop is available in the current session
$env:Path = [System.Environment]::GetEnvironmentVariable("Path","Machine") + ";" + [System.Environment]::GetEnvironmentVariable("Path","User")

# needed for scoop buckets
scoop install git

$currentBucketNames = (scoop bucket list).Name
$currentApps = scoop list | ForEach-Object { "$($_.Source)/$($_.Name)" }

# Install packages defined in the YAML file.
{{- $packages := joinPath .chezmoi.sourceDir ".data/packages.yaml" | include | fromYaml -}}

{{- range $packages -}}
    {{- if hasKey . "scoop" -}}
        {{ $app := "" -}}
        {{ $elevate := false -}}
        {{- if kindIs "map" .scoop -}}
            {{- $app = .scoop.app -}}
            {{- if and (hasKey .scoop "elevate") .scoop.elevate -}}
                {{- $elevate = true -}}
            {{- end -}}
        {{- else -}}
            {{- $app = .scoop -}}
        {{- end -}}
        {{- $appParts := split "/" $app -}}
        {{- $bucket := $appParts._0 -}}
        {{- $name := $appParts._1 }}

if ($currentApps -contains "{{ $bucket }}/{{ $name }}") {
    Write-Host "Package '{{ $bucket }}/{{ $name }}' is already installed. Skipping installation." -ForegroundColor Yellow
} else {
    if (-not $currentBucketNames -contains "{{ $bucket }}") {
        scoop bucket add '{{ $bucket }}'
    }
    {{ if $elevate }}sudo {{ end }}scoop install '{{ $bucket }}/{{ $name }}'
}
    {{- end -}}
{{- end }}
