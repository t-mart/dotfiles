#!/usr/bin/env bash
set -euo pipefail

ENABLED="
{{- if eq .osid "linux-arch" -}}
    true
{{- else -}}
    false
{{- end -}}
"
readonly ENABLED

# If not arch, exit early.
if [ "$ENABLED" = "false" ]; then
    exit 0
fi

# Install paru (AUR helper)
if ! command -v paru &> /dev/null; then
    echo "Installing paru..."

    sudo pacman -Syu --noconfirm --needed base-devel git gnupg

    temp_dir=$(mktemp -d)
    trap 'rm -rf "$temp_dir"' EXIT # Ensures cleanup even on script failure

    git clone https://aur.archlinux.org/paru.git "$temp_dir/paru"
    (
        cd "$temp_dir/paru" || exit
        makepkg -si --noconfirm
    )

    echo "Paru installed successfully."
fi

# create an array of 3-tuples (comma-separated): package name, GPG key ID, GPG key URL
# GPG key ID and URL are optional, but only one can be specified
PACKAGE_CONFS=(
{{- $packages := joinPath .chezmoi.sourceDir ".data/packages.yaml" | include | fromYaml -}}
{{- range $packages -}}
    {{- if hasKey . "archlinux" -}}
        {{- $vars := dict "name" "" "gpg-key-id" "" "gpg-key-url" "" -}}
        {{- $pkgConfig := index . "archlinux" -}}
        {{- if kindIs "map" $pkgConfig -}}
            {{- $_ := set $vars "name" $pkgConfig.name -}}
            {{- if hasKey $pkgConfig "gpg-key-id" }}{{ $_ := set $vars "gpg-key-id" (index $pkgConfig "gpg-key-id") }}{{ end -}}
            {{- if hasKey $pkgConfig "gpg-key-url" }}{{ $_ := set $vars "gpg-key-url" (index $pkgConfig "gpg-key-url") }}{{ end -}}
        {{- else -}}
            {{- $_ := set $vars "name" $pkgConfig -}}
        {{- end }}
        "{{ $vars.name }},{{ index $vars "gpg-key-id" }},{{ index $vars "gpg-key-url" }}"
    {{ end -}}
{{- end -}}
)
readonly PACKAGE_CONFS

# iterate
for package_conf in "${PACKAGE_CONFS[@]}"; do
    IFS=',' read -r package_name gpg_key_id gpg_key_url <<< "$package_conf"

    echo "Installing package: $package_name"

    # If a GPG key ID is provided, import it
    if [ -n "$gpg_key_id" ]; then
        echo "Importing GPG key: $gpg_key_id"
        gpg --recv-keys "$gpg_key_id" || {
            echo "Failed to import GPG key: $gpg_key_id" >&2
            continue
        }
    fi

    # If a GPG key URL is provided, import it
    if [ -n "$gpg_key_url" ]; then
        echo "Importing GPG key from URL: $gpg_key_url"
        curl -fsSL "$gpg_key_url" | gpg --import || {
            echo "Failed to import GPG key from URL: $gpg_key_url" >&2
            continue
        }
    fi

    # Install the package using paru
    paru -S --noconfirm --needed "$package_name"

    echo "Package $package_name installed successfully."
done